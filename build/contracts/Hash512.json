{
  "abi": [
    {
      "inputs": [],
      "name": "hashGost_not_optimized",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hashGost_optimized",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hashKeccak256",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Hash512.sol"
  },
  "ast": {
    "absolutePath": "contracts/Hash512.sol",
    "exportedSymbols": {
      "Hash512": [
        135
      ],
      "Uint512": [
        2303
      ]
    },
    "id": 136,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "contracts/Uint512.sol",
        "file": "contracts/Uint512.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 2304,
        "src": "57:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Hash512",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135
        ],
        "name": "Hash512",
        "nameLocation": "99:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "147:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 10,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "192:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 9,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "184:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "184:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "184:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "167:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "171:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "167:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "167:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "157:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "157:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "157:115:0"
                }
              ]
            },
            "functionSelector": "ed01c8f9",
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashKeccak256",
            "nameLocation": "124:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "137:2:0"
            },
            "returnParameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "147:0:0"
            },
            "scope": 135,
            "src": "115:164:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "331:383:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 24,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "375:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 23,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "367:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 22,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "367:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "367:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 20,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "350:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "354:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "350:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "350:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "340:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "340:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 34,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "501:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "493:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "493:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "493:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "476:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "480:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "476:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "476:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 29,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "466:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "466:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "466:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "626:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "618:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 42,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "618:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "618:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 40,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "601:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "605:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "601:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "601:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 39,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "591:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "591:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "591:115:0"
                }
              ]
            },
            "functionSelector": "f58e71ad",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashGost_optimized",
            "nameLocation": "294:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:0"
            },
            "scope": 135,
            "src": "285:429:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "770:1008:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 58,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "814:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "806:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 56,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "806:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "806:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 54,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "789:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "793:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "789:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "789:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 53,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "779:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "779:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 68,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "939:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "931:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 66,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "931:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "931:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 64,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "914:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "918:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "914:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 63,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "904:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "904:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "904:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 78,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1064:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1056:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 76,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1056:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1056:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 74,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1039:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1043:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1039:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1039:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 73,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1029:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1189:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1181:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 86,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1181:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1181:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 84,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1164:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1168:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1164:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1164:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 83,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1154:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1314:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1306:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 96,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1306:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1306:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 94,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1289:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1293:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1289:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1289:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 93,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1279:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1439:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1431:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 106,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1431:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1431:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 104,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1414:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1418:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1414:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1414:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 103,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1404:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1564:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1556:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 116,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1556:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1556:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 114,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1539:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1543:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1539:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 113,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1529:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                                "id": 128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1689:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                },
                                "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9968"
                                }
                              ],
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1681:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 126,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1681:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1681:86:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 124,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1664:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1668:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1664:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:104:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 123,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1654:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:115:0"
                }
              ]
            },
            "functionSelector": "305ea0ba",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashGost_not_optimized",
            "nameLocation": "729:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "770:0:0"
            },
            "scope": 135,
            "src": "720:1058:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 136,
        "src": "90:11026:0",
        "usedErrors": []
      }
    ],
    "src": "32:11084:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5061019c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063305ea0ba14610046578063ed01c8f914610050578063f58e71ad14610058575b600080fd5b61004e610060565b005b61004e61013e565b61004e610152565b60408051600160ff1b60208201520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b6020830152015b60408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b6020830152015b60408051601f1981840301905252565b60408051600160ff1b60208201520161012e565b60408051600160ff1b6020820152016100f756fea264697066735822122051542331be8ae6172c2f6abc8c1e1084ec634911ffcd9e0a3f28b65c2f2a807464736f6c63430008110033",
  "bytecodeSha1": "89c3c40a32f3a42f48766927e31101a2f6799da7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Hash512",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "Hash512.hashGost_not_optimized": {
          "0": [
            779,
            894
          ],
          "1": [
            904,
            1019
          ],
          "2": [
            1029,
            1144
          ],
          "3": [
            1154,
            1269
          ],
          "4": [
            1279,
            1394
          ],
          "5": [
            1404,
            1519
          ],
          "6": [
            1529,
            1644
          ],
          "7": [
            1654,
            1769
          ]
        },
        "Hash512.hashGost_optimized": {
          "9": [
            340,
            455
          ]
        },
        "Hash512.hashKeccak256": {
          "8": [
            157,
            272
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063305ea0ba14610046578063ed01c8f914610050578063f58e71ad14610058575b600080fd5b61004e610060565b005b61004e61013e565b61004e610152565b60408051600160ff1b60208201520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b6020830152015b60408051808303601f19019052818152600160ff1b60208301520160408051808303601f19019052818152600160ff1b6020830152015b60408051601f1981840301905252565b60408051600160ff1b60208201520161012e565b60408051600160ff1b6020820152016100f756fea264697066735822122051542331be8ae6172c2f6abc8c1e1084ec634911ffcd9e0a3f28b65c2f2a807464736f6c63430008110033",
  "deployedSourceMap": "90:11026:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:1058;;;:::i;:::-;;115:164;;;:::i;285:429::-;;;:::i;720:1058::-;789:104;;;-1:-1:-1;;;789:104:0;;;143:19:3;178:12;789:104:0;;;;;;-1:-1:-1;;789:104:0;;;;;;-1:-1:-1;;;789:104:0;914;;143:19:3;178:12;914:104:0;;;;;;-1:-1:-1;;914:104:0;;;;;;-1:-1:-1;;;914:104:0;1039;;143:19:3;178:12;1039:104:0;;;;;;-1:-1:-1;;1039:104:0;;;;;;-1:-1:-1;;;1039:104:0;1164;;143:19:3;178:12;1164:104:0;;;;;;-1:-1:-1;;1164:104:0;;;;;;-1:-1:-1;;;1164:104:0;1289;;143:19:3;178:12;1289:104:0;;;;;;-1:-1:-1;;1289:104:0;;;;;;-1:-1:-1;;;1289:104:0;1414;;143:19:3;178:12;1414:104:0;;;;;;;-1:-1:-1;;1414:104:0;;;;;;-1:-1:-1;;;1414:104:0;1539;;143:19:3;178:12;1539:104:0;;;;;;-1:-1:-1;;1539:104:0;;;;;;-1:-1:-1;;;1539:104:0;1664;;143:19:3;178:12;1664:104:0;;;;-1:-1:-1;;1664:104:0;;;;;;;720:1058::o;115:164::-;167:104;;;-1:-1:-1;;;167:104:0;;;143:19:3;178:12;167:104:0;14:182:3;285:429:0;350:104;;;-1:-1:-1;;;350:104:0;;;143:19:3;178:12;350:104:0;14:182:3",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    90,
    11116
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x305EA0BA EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xED01C8F9 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF58E71AD EQ PUSH2 0x58 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x13E JUMP JUMPDEST PUSH2 0x4E PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD SWAP1 MSTORE MSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0xF7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD SLOAD 0x23 BALANCE 0xBE DUP11 0xE6 OR 0x2C 0x2F PUSH11 0xBC8C1E1084EC634911FFCD SWAP15 EXP EXTCODEHASH 0x28 0xB6 0x5C 0x2F 0x2A DUP1 PUSH21 0x64736F6C6343000811003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x305EA0BA"
    },
    "38": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xED01C8F9"
    },
    "49": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50"
    },
    "53": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF58E71AD"
    },
    "60": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58"
    },
    "64": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        90,
        11116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "70": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        720,
        1778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "71": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        720,
        1778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "74": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        720,
        1778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60"
    },
    "77": {
      "fn": "Hash512.hashGost_not_optimized",
      "jump": "i",
      "offset": [
        720,
        1778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "78": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        720,
        1778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        720,
        1778
      ],
      "op": "STOP",
      "path": "0"
    },
    "80": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        115,
        279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "81": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        115,
        279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "84": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        115,
        279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "87": {
      "fn": "Hash512.hashKeccak256",
      "jump": "i",
      "offset": [
        115,
        279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "88": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        285,
        714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "89": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        285,
        714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "92": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        285,
        714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "95": {
      "fn": "Hash512.hashGost_optimized",
      "jump": "i",
      "offset": [
        285,
        714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "96": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        720,
        1778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "97": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x40"
    },
    "99": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP1",
      "path": "0"
    },
    "100": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "103": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "105": {
      "op": "SHL"
    },
    "106": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "108": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP3",
      "path": "0"
    },
    "109": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "ADD",
      "path": "0"
    },
    "110": {
      "op": "MSTORE"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "114": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "116": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP1",
      "path": "0"
    },
    "117": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP4",
      "path": "0"
    },
    "118": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "SUB",
      "path": "0"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "121": {
      "op": "NOT"
    },
    "122": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "ADD",
      "path": "0"
    },
    "123": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "124": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "125": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP2",
      "path": "0"
    },
    "126": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "DUP2",
      "path": "0"
    },
    "127": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "132": {
      "op": "SHL"
    },
    "133": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        789,
        893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "135": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "136": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "ADD",
      "path": "0"
    },
    "137": {
      "op": "MSTORE"
    },
    "138": {
      "op": "ADD"
    },
    "139": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "141": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "143": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "DUP1",
      "path": "0"
    },
    "144": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "DUP4",
      "path": "0"
    },
    "145": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "SUB",
      "path": "0"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "148": {
      "op": "NOT"
    },
    "149": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "ADD",
      "path": "0"
    },
    "150": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "151": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "152": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "153": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "154": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        914,
        1018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "162": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 2
    },
    "163": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "ADD",
      "path": "0"
    },
    "164": {
      "op": "MSTORE"
    },
    "165": {
      "op": "ADD"
    },
    "166": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "168": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "DUP1",
      "path": "0"
    },
    "169": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "170": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "DUP1",
      "path": "0"
    },
    "171": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "DUP4",
      "path": "0"
    },
    "172": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "SUB",
      "path": "0"
    },
    "173": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "175": {
      "op": "NOT"
    },
    "176": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "ADD",
      "path": "0"
    },
    "177": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "178": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "179": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "180": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "181": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "184": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "186": {
      "op": "SHL"
    },
    "187": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1039,
        1143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "189": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "190": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "ADD",
      "path": "0"
    },
    "191": {
      "op": "MSTORE"
    },
    "192": {
      "op": "ADD"
    },
    "193": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "196": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "198": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "DUP4",
      "path": "0"
    },
    "199": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "SUB",
      "path": "0"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "202": {
      "op": "NOT"
    },
    "203": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "ADD",
      "path": "0"
    },
    "204": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "205": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "206": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "207": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "208": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1164,
        1268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "216": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 4
    },
    "217": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "ADD",
      "path": "0"
    },
    "218": {
      "op": "MSTORE"
    },
    "219": {
      "op": "ADD"
    },
    "220": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "222": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "223": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "224": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "225": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "DUP4",
      "path": "0"
    },
    "226": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "SUB",
      "path": "0"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "229": {
      "op": "NOT"
    },
    "230": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "ADD",
      "path": "0"
    },
    "231": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "232": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "233": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "234": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "235": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1289,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "243": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 5
    },
    "244": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "ADD",
      "path": "0"
    },
    "245": {
      "op": "MSTORE"
    },
    "246": {
      "op": "ADD"
    },
    "247": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "250": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "251": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "252": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "253": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "DUP4",
      "path": "0"
    },
    "254": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "SUB",
      "path": "0"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "257": {
      "op": "NOT"
    },
    "258": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "ADD",
      "path": "0"
    },
    "259": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "260": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "261": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "262": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "263": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "268": {
      "op": "SHL"
    },
    "269": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1414,
        1518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "271": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 6
    },
    "272": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "ADD",
      "path": "0"
    },
    "273": {
      "op": "MSTORE"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "277": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "DUP1",
      "path": "0"
    },
    "278": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "279": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "DUP1",
      "path": "0"
    },
    "280": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "DUP4",
      "path": "0"
    },
    "281": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "SUB",
      "path": "0"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "284": {
      "op": "NOT"
    },
    "285": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "ADD",
      "path": "0"
    },
    "286": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "288": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "DUP2",
      "path": "0"
    },
    "289": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "DUP2",
      "path": "0"
    },
    "290": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1539,
        1643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "298": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "299": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "ADD",
      "path": "0"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "ADD"
    },
    "302": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "305": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "309": {
      "op": "NOT"
    },
    "310": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "DUP2",
      "path": "0"
    },
    "311": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "DUP5",
      "path": "0"
    },
    "312": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "SUB",
      "path": "0"
    },
    "313": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "ADD",
      "path": "0"
    },
    "314": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "315": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "316": {
      "fn": "Hash512.hashGost_not_optimized",
      "offset": [
        1664,
        1768
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "317": {
      "fn": "Hash512.hashGost_not_optimized",
      "jump": "o",
      "offset": [
        720,
        1778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "318": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        115,
        279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "321": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "322": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "330": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "331": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "ADD",
      "path": "0"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "fn": "Hash512.hashKeccak256",
      "offset": [
        167,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "337": {
      "op": "JUMP"
    },
    "338": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        285,
        714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x40"
    },
    "341": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "342": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "345": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "347": {
      "op": "SHL"
    },
    "348": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "350": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "DUP3",
      "path": "0"
    },
    "351": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "ADD",
      "path": "0"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "fn": "Hash512.hashGost_optimized",
      "offset": [
        350,
        454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "357": {
      "op": "JUMP"
    }
  },
  "sha1": "51aa79a9a71afcbf85d8329601974a51510cd763",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"contracts/Uint512.sol\";\n\ncontract Hash512 {\n\n\n    function hashKeccak256() public {\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n    }\n\n    function hashGost_optimized() public pure\n    {        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n\n    }\n\n    function hashGost_not_optimized() public pure\n    {        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n        keccak256(abi.encodePacked(uint256(57896044618658097711785492504343953926634992332820282019728792003956564819968)));\n\n\n    }\n       \n\n    //  // Matrix A for MixColumns (L) function\n    //     bytes[64] memory A = [\n    //     \"0x8e20faa72ba0b470\", \"0x47107ddd9b505a38\", \"0xad08b0e0c3282d1c\", \"0xd8045870ef14980e\",\n    //     \"0x6c022c38f90a4c07\", \"0x3601161cf205268d\", \"0x1b8e0b0e798c13c8\", \"0x83478b07b2468764\",\n    //     \"0xa011d380818e8f40\", \"0x5086e740ce47c920\", \"0x2843fd2067adea10\", \"0x14aff010bdd87508\",\n    //     \"0x0ad97808d06cb404\", \"0x05e23c0468365a02\", \"0x8c711e02341b2d01\", \"0x46b60f011a83988e\",\n    //     \"0x90dab52a387ae76f\", \"0x486dd4151c3dfdb9\", \"0x24b86a840e90f0d2\", \"0x125c354207487869\",\n    //     \"0x092e94218d243cba\", \"0x8a174a9ec8121e5d\", \"0x4585254f64090fa0\", \"0xaccc9ca9328a8950\",\n    //     \"0x9d4df05d5f661451\", \"0xc0a878a0a1330aa6\", \"0x60543c50de970553\", \"0x302a1e286fc58ca7\",\n    //     \"0x18150f14b9ec46dd\", \"0x0c84890ad27623e0\", \"0x0642ca05693b9f70\", \"0x0321658cba93c138\",\n    //     \"0x86275df09ce8aaa8\", \"0x439da0784e745554\", \"0xafc0503c273aa42a\", \"0xd960281e9d1d5215\",\n    //     \"0xe230140fc0802984\", \"0x71180a8960409a42\", \"0xb60c05ca30204d21\", \"0x5b068c651810a89e\",\n    //     \"0x456c34887a3805b9\", \"0xac361a443d1c8cd2\", \"0x561b0d22900e4669\", \"0x2b838811480723ba\",\n    //     \"0x9bcf4486248d9f5d\", \"0xc3e9224312c8c1a0\", \"0xeffa11af0964ee50\", \"0xf97d86d98a327728\",\n    //     \"0xe4fa2054a80b329c\", \"0x727d102a548b194e\", \"0x39b008152acb8227\", \"0x9258048415eb419d\",\n    //     \"0x492c024284fbaec0\", \"0xaa16012142f35760\", \"0x550b8e9e21f7a530\", \"0xa48b474f9ef5dc18\",\n    //     \"0x70a6a56e2440598e\", \"0x3853dc371220a247\", \"0x1ca76e95091051ad\", \"0x0edd37c48a08a6d8\",\n    //     \"0x07e095624504536c\", \"0x8d70c431ac02a736\", \"0xc83862965601dd1b\", \"0x641c314b2b8ee083\"\n    //     ];\n\n    //     // Substitution for SubBytes function\n    //     bytes[256] memory Sbox = [\n    //     \"0xFC\", \"0xEE\", \"0xDD\", \"0x11\", \"0xCF\", \"0x6E\", \"0x31\", \"0x16\", \"0xFB\", \"0xC4\", \"0xFA\", \"0xDA\", \"0x23\", \"0xC5\", \"0x04\", \"0x4D\",\n    //     \"0xE9\", \"0x77\", \"0xF0\", \"0xDB\", \"0x93\", \"0x2E\", \"0x99\", \"0xBA\", \"0x17\", \"0x36\", \"0xF1\", \"0xBB\", \"0x14\", \"0xCD\", \"0x5F\", \"0xC1\",\n    //     \"0xF9\", \"0x18\", \"0x65\", \"0x5A\", \"0xE2\", \"0x5C\", \"0xEF\", \"0x21\", \"0x81\", \"0x1C\", \"0x3C\", \"0x42\", \"0x8B\", \"0x01\", \"0x8E\", \"0x4F\",\n    //     \"0x05\", \"0x84\", \"0x02\", \"0xAE\", \"0xE3\", \"0x6A\", \"0x8F\", \"0xA0\", \"0x06\", \"0x0B\", \"0xED\", \"0x98\", \"0x7F\", \"0xD4\", \"0xD3\", \"0x1F\",\n    //     \"0xEB\", \"0x34\", \"0x2C\", \"0x51\", \"0xEA\", \"0xC8\", \"0x48\", \"0xAB\", \"0xF2\", \"0x2A\", \"0x68\", \"0xA2\", \"0xFD\", \"0x3A\", \"0xCE\", \"0xCC\",\n    //     \"0xB5\", \"0x70\", \"0x0E\", \"0x56\", \"0x08\", \"0x0C\", \"0x76\", \"0x12\", \"0xBF\", \"0x72\", \"0x13\", \"0x47\", \"0x9C\", \"0xB7\", \"0x5D\", \"0x87\",\n    //     \"0x15\", \"0xA1\", \"0x96\", \"0x29\", \"0x10\", \"0x7B\", \"0x9A\", \"0xC7\", \"0xF3\", \"0x91\", \"0x78\", \"0x6F\", \"0x9D\", \"0x9E\", \"0xB2\", \"0xB1\",\n    //     \"0x32\", \"0x75\", \"0x19\", \"0x3D\", \"0xFF\", \"0x35\", \"0x8A\", \"0x7E\", \"0x6D\", \"0x54\", \"0xC6\", \"0x80\", \"0xC3\", \"0xBD\", \"0x0D\", \"0x57\",\n    //     \"0xDF\", \"0xF5\", \"0x24\", \"0xA9\", \"0x3E\", \"0xA8\", \"0x43\", \"0xC9\", \"0xD7\", \"0x79\", \"0xD6\", \"0xF6\", \"0x7C\", \"0x22\", \"0xB9\", \"0x03\",\n    //     \"0xE0\", \"0x0F\", \"0xEC\", \"0xDE\", \"0x7A\", \"0x94\", \"0xB0\", \"0xBC\", \"0xDC\", \"0xE8\", \"0x28\", \"0x50\", \"0x4E\", \"0x33\", \"0x0A\", \"0x4A\",\n    //     \"0xA7\", \"0x97\", \"0x60\", \"0x73\", \"0x1E\", \"0x00\", \"0x62\", \"0x44\", \"0x1A\", \"0xB8\", \"0x38\", \"0x82\", \"0x64\", \"0x9F\", \"0x26\", \"0x41\",\n    //     \"0xAD\", \"0x45\", \"0x46\", \"0x92\", \"0x27\", \"0x5E\", \"0x55\", \"0x2F\", \"0x8C\", \"0xA3\", \"0xA5\", \"0x7D\", \"0x69\", \"0xD5\", \"0x95\", \"0x3B\",\n    //     \"0x07\", \"0x58\", \"0xB3\", \"0x40\", \"0x86\", \"0xAC\", \"0x1D\", \"0xF7\", \"0x30\", \"0x37\", \"0x6B\", \"0xE4\", \"0x88\", \"0xD9\", \"0xE7\", \"0x89\",\n    //     \"0xE1\", \"0x1B\", \"0x83\", \"0x49\", \"0x4C\", \"0x3F\", \"0xF8\", \"0xFE\", \"0x8D\", \"0x53\", \"0xAA\", \"0x90\", \"0xCA\", \"0xD8\", \"0x85\", \"0x61\",\n    //     \"0x20\", \"0x71\", \"0x67\", \"0xA4\", \"0x2D\", \"0x2B\", \"0x09\", \"0x5B\", \"0xCB\", \"0x9B\", \"0x25\", \"0xD0\", \"0xBE\", \"0xE5\", \"0x6C\", \"0x52\",\n    //     \"0x59\", \"0xA6\", \"0x74\", \"0xD2\", \"0xE6\", \"0xF4\", \"0xB4\", \"0xC0\", \"0xD1\", \"0x66\", \"0xAF\", \"0xC2\", \"0x39\", \"0x4B\", \"0x63\", \"0xB6\"\n    //     ];\n\n    //     // Substitution for Transposition (P) function\n    //     uint[64] memory Tau=[\n    //     0, 8, 16, 24, 32, 40, 48, 56,\n    //     1, 9, 17, 25, 33, 41, 49, 57,\n    //     2, 10, 18, 26, 34, 42, 50, 58,\n    //     3, 11, 19, 27, 35, 43, 51, 59,\n    //     4, 12, 20, 28, 36, 44, 52, 60,\n    //     5, 13, 21, 29, 37, 45, 53, 61,\n    //     6, 14, 22, 30, 38, 46, 54, 62,\n    //     7, 15, 23, 31, 39, 47, 55, 63\n    //     ];\n\n    //     // Constant values for KeySchedule function\n    //     bytes[64][12] memory C = [\n    //     [\n    //     0xb1,0x08,0x5b,0xda,0x1e,0xca,0xda,0xe9,0xeb,0xcb,0x2f,0x81,0xc0,0x65,0x7c,0x1f,\n    //     0x2f,0x6a,0x76,0x43,0x2e,0x45,0xd0,0x16,0x71,0x4e,0xb8,0x8d,0x75,0x85,0xc4,0xfc,\n    //     0x4b,0x7c,0xe0,0x91,0x92,0x67,0x69,0x01,0xa2,0x42,0x2a,0x08,0xa4,0x60,0xd3,0x15,\n    //     0x05,0x76,0x74,0x36,0xcc,0x74,0x4d,0x23,0xdd,0x80,0x65,0x59,0xf2,0xa6,0x45,0x07\n    //     ],\n    //     [\n    //     0x6f,0xa3,0xb5,0x8a,0xa9,0x9d,0x2f,0x1a,0x4f,0xe3,0x9d,0x46,0x0f,0x70,0xb5,0xd7,\n    //     0xf3,0xfe,0xea,0x72,0x0a,0x23,0x2b,0x98,0x61,0xd5,0x5e,0x0f,0x16,0xb5,0x01,0x31,\n    //     0x9a,0xb5,0x17,0x6b,0x12,0xd6,0x99,0x58,0x5c,0xb5,0x61,0xc2,0xdb,0x0a,0xa7,0xca,\n    //     0x55,0xdd,0xa2,0x1b,0xd7,0xcb,0xcd,0x56,0xe6,0x79,0x04,0x70,0x21,0xb1,0x9b,0xb7\n    //     ],\n    //     [\n    //     0xf5,0x74,0xdc,0xac,0x2b,0xce,0x2f,0xc7,0x0a,0x39,0xfc,0x28,0x6a,0x3d,0x84,0x35,\n    //     0x06,0xf1,0x5e,0x5f,0x52,0x9c,0x1f,0x8b,0xf2,0xea,0x75,0x14,0xb1,0x29,0x7b,0x7b,\n    //     0xd3,0xe2,0x0f,0xe4,0x90,0x35,0x9e,0xb1,0xc1,0xc9,0x3a,0x37,0x60,0x62,0xdb,0x09,\n    //     0xc2,0xb6,0xf4,0x43,0x86,0x7a,0xdb,0x31,0x99,0x1e,0x96,0xf5,0x0a,0xba,0x0a,0xb2\n    //     ],\n    //     [\n    //     0xef,0x1f,0xdf,0xb3,0xe8,0x15,0x66,0xd2,0xf9,0x48,0xe1,0xa0,0x5d,0x71,0xe4,0xdd,\n    //     0x48,0x8e,0x85,0x7e,0x33,0x5c,0x3c,0x7d,0x9d,0x72,0x1c,0xad,0x68,0x5e,0x35,0x3f,\n    //     0xa9,0xd7,0x2c,0x82,0xed,0x03,0xd6,0x75,0xd8,0xb7,0x13,0x33,0x93,0x52,0x03,0xbe,\n    //     0x34,0x53,0xea,0xa1,0x93,0xe8,0x37,0xf1,0x22,0x0c,0xbe,0xbc,0x84,0xe3,0xd1,0x2e\n    //     ],\n    //     [\n    //     0x4b,0xea,0x6b,0xac,0xad,0x47,0x47,0x99,0x9a,0x3f,0x41,0x0c,0x6c,0xa9,0x23,0x63,\n    //     0x7f,0x15,0x1c,0x1f,0x16,0x86,0x10,0x4a,0x35,0x9e,0x35,0xd7,0x80,0x0f,0xff,0xbd,\n    //     0xbf,0xcd,0x17,0x47,0x25,0x3a,0xf5,0xa3,0xdf,0xff,0x00,0xb7,0x23,0x27,0x1a,0x16,\n    //     0x7a,0x56,0xa2,0x7e,0xa9,0xea,0x63,0xf5,0x60,0x17,0x58,0xfd,0x7c,0x6c,0xfe,0x57\n    //     ],\n    //     [\n    //     0xae,0x4f,0xae,0xae,0x1d,0x3a,0xd3,0xd9,0x6f,0xa4,0xc3,0x3b,0x7a,0x30,0x39,0xc0,\n    //     0x2d,0x66,0xc4,0xf9,0x51,0x42,0xa4,0x6c,0x18,0x7f,0x9a,0xb4,0x9a,0xf0,0x8e,0xc6,\n    //     0xcf,0xfa,0xa6,0xb7,0x1c,0x9a,0xb7,0xb4,0x0a,0xf2,0x1f,0x66,0xc2,0xbe,0xc6,0xb6,\n    //     0xbf,0x71,0xc5,0x72,0x36,0x90,0x4f,0x35,0xfa,0x68,0x40,0x7a,0x46,0x64,0x7d,0x6e\n    //     ],\n    //     [\n    //     0xf4,0xc7,0x0e,0x16,0xee,0xaa,0xc5,0xec,0x51,0xac,0x86,0xfe,0xbf,0x24,0x09,0x54,\n    //     0x39,0x9e,0xc6,0xc7,0xe6,0xbf,0x87,0xc9,0xd3,0x47,0x3e,0x33,0x19,0x7a,0x93,0xc9,\n    //     0x09,0x92,0xab,0xc5,0x2d,0x82,0x2c,0x37,0x06,0x47,0x69,0x83,0x28,0x4a,0x05,0x04,\n    //     0x35,0x17,0x45,0x4c,0xa2,0x3c,0x4a,0xf3,0x88,0x86,0x56,0x4d,0x3a,0x14,0xd4,0x93\n    //     ],\n    //     [\n    //     0x9b,0x1f,0x5b,0x42,0x4d,0x93,0xc9,0xa7,0x03,0xe7,0xaa,0x02,0x0c,0x6e,0x41,0x41,\n    //     0x4e,0xb7,0xf8,0x71,0x9c,0x36,0xde,0x1e,0x89,0xb4,0x44,0x3b,0x4d,0xdb,0xc4,0x9a,\n    //     0xf4,0x89,0x2b,0xcb,0x92,0x9b,0x06,0x90,0x69,0xd1,0x8d,0x2b,0xd1,0xa5,0xc4,0x2f,\n    //     0x36,0xac,0xc2,0x35,0x59,0x51,0xa8,0xd9,0xa4,0x7f,0x0d,0xd4,0xbf,0x02,0xe7,0x1e\n    //     ],\n    //     [\n    //     0x37,0x8f,0x5a,0x54,0x16,0x31,0x22,0x9b,0x94,0x4c,0x9a,0xd8,0xec,0x16,0x5f,0xde,\n    //     0x3a,0x7d,0x3a,0x1b,0x25,0x89,0x42,0x24,0x3c,0xd9,0x55,0xb7,0xe0,0x0d,0x09,0x84,\n    //     0x80,0x0a,0x44,0x0b,0xdb,0xb2,0xce,0xb1,0x7b,0x2b,0x8a,0x9a,0xa6,0x07,0x9c,0x54,\n    //     0x0e,0x38,0xdc,0x92,0xcb,0x1f,0x2a,0x60,0x72,0x61,0x44,0x51,0x83,0x23,0x5a,0xdb\n    //     ],\n    //     [\n    //     0xab,0xbe,0xde,0xa6,0x80,0x05,0x6f,0x52,0x38,0x2a,0xe5,0x48,0xb2,0xe4,0xf3,0xf3,\n    //     0x89,0x41,0xe7,0x1c,0xff,0x8a,0x78,0xdb,0x1f,0xff,0xe1,0x8a,0x1b,0x33,0x61,0x03,\n    //     0x9f,0xe7,0x67,0x02,0xaf,0x69,0x33,0x4b,0x7a,0x1e,0x6c,0x30,0x3b,0x76,0x52,0xf4,\n    //     0x36,0x98,0xfa,0xd1,0x15,0x3b,0xb6,0xc3,0x74,0xb4,0xc7,0xfb,0x98,0x45,0x9c,0xed\n    //     ],\n    //     [\n    //     0x7b,0xcd,0x9e,0xd0,0xef,0xc8,0x89,0xfb,0x30,0x02,0xc6,0xcd,0x63,0x5a,0xfe,0x94,\n    //     0xd8,0xfa,0x6b,0xbb,0xeb,0xab,0x07,0x61,0x20,0x01,0x80,0x21,0x14,0x84,0x66,0x79,\n    //     0x8a,0x1d,0x71,0xef,0xea,0x48,0xb9,0xca,0xef,0xba,0xcd,0x1d,0x7d,0x47,0x6e,0x98,\n    //     0xde,0xa2,0x59,0x4a,0xc0,0x6f,0xd8,0x5d,0x6b,0xca,0xa4,0xcd,0x81,0xf3,0x2d,0x1b\n    //     ],\n    //     [\n    //     0x37,0x8e,0xe7,0x67,0xf1,0x16,0x31,0xba,0xd2,0x13,0x80,0xb0,0x04,0x49,0xb1,0x7a,\n    //     0xcd,0xa4,0x3c,0x32,0xbc,0xdf,0x1d,0x77,0xf8,0x20,0x12,0xd4,0x30,0x21,0x9f,0x9b,\n    //     0x5d,0x80,0xef,0x9d,0x18,0x91,0xcc,0x86,0xe7,0x1d,0xa4,0xaa,0x88,0xe1,0x28,0x52,\n    //     0xfa,0xf4,0x17,0xd5,0xd9,0xb2,0x1b,0x99,0x48,0xbc,0x92,0x4a,0xf1,0x1b,0xd7,0x20\n    //     ]\n    //     ];\n\n\n     \n\n    //     return (message);\n    // }\n\n\n}",
  "sourceMap": "90:11026:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Hash512.sol",
  "type": "contract"
}